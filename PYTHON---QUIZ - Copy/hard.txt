Q41. 
hard
The duplicates from the list get removed, due to the python dictionary,which doesn't allow them
https://www.w3schools.com/python/python_howto_remove_duplicates.asp
What will the code return?
<pre>
mylist = ['a','b','a','c','c']
mylist = list(dict.fromkeys(mylist))
print(mylist)
</pre>

1. ['a','b','c'] ***
2. ['a','b','a','c','c']
3. [a,b,c]
4. ['a','b','c','c']

Q42. 
hard
In Python, AND operator has higher precedence than OR operator. 
So, it is evaluated first. i.e, (b and c) evaluates to false.
Now OR operator is evaluated. Here, (True or False) evaluates to True. 
So the if condition becomes True and GEEKSFORGEEKS is printed as output.
https://www.programiz.com/python-programming/precedence-associativity
What will the code return?
<pre>
a = True
b = False
c = False
  
if a or b and c:
    print ("GEEKSFORGEEKS")
else:
    print ("geeksforgeeks")
</pre>

1. geeksforgeeks
2. GEEKSFORGEEKS ***
3. error
4. GEEKSFORGEEKSgeeksforgeeks

Q43. 
hard
enumerate() will return a tuple, the loop will have x = (0, 0), (1, 1). Thus D[0] = 0, D[1] = 1, D[0 + 7] = D[7] = 0 and D[1 + 7] = D[8] = 1. 
Note: Dictionary is unordered, so the sequence of the key-value pair may differ in each output.
https://www.geeksforgeeks.org/enumerate-in-python/
What will the code return?
<pre>
D = dict() 
for x in enumerate(range(2)): 
    D[x[0]] = x[1] 
    D[x[1]+7] = x[0] 
print(D) 
</pre>

1. {0: 1, 7: 0, 1: 1, 8: 0} 
2. {1: 1, 7: 2, 0: 1, 8: 1}
3. {0: 0, 7: 0, 1: 1, 8: 1} ***
4. error

Q44. 
hard
So in this code,since the attribute x is not found in class C, it will be looked up in its base classes (only A in the above example). 
In other words, C doesnâ€™t have its own x property, independent of A. Thus, references to C.x are in fact references to A.x.
https://www.geeksforgeeks.org/inheritance-in-python/
What will the code return?
<pre>
class A(object):
    x = 1

class B(A):
    pass

class C(A):
    pass

B.x = 2 
A.x = 3
print(A.x, B.x, C.x)
</pre>

1. 3 2 2
2. 3 2 3 ***
3. 3 2 1 
4. error

Q45. 
hard
pop(i) removes the ith index element from the list
https://www.programiz.com/python-programming/methods/list/pop
What will the code return?
<pre>
l = [3, 4, 5, 20, 5, 25, 1, 3]
l.pop(1)
print(l)
</pre>

1. [3, 4, 5, 20, 5, 25, 1, 3]
2. [1, 3, 3, 4, 5, 5, 20, 25]
3. [3, 5, 20, 5, 25, 1, 3] ***
4. [1, 3, 4, 5, 20, 5, 25]

Q46. 
hard
The % converts the 0.33 to percentage with respect to 1.0
https://www.w3schools.com/python/trypython.asp?filename=demo_string_placeholder23
What will the code return?
<pre>
print('{0:-2%}'.format(1.0 / 3))
</pre>

1. 0.33
2. 0.33%
3. 33.333333% ***
4. 33%

Q47. 
hard
The first substring is not present in the given string and hence nothing is replaced.
https://www.w3schools.com/python/ref_string_replace.asp
What will the code return?
<pre>
print('abcefd'.replace('cd', '12'))
</pre>

1. ab1ef2
2. abcefd ***
3. ab1efd
4. ab12ed2

Q48. 
hard
-l3 is a copy of l1 ,so l3=[1, 2, 3]
-l4 is also the same as l1 ,so l4=[1, 2, 3]
-l2 is the same as l1 and since l1=[[7], 2, 3] from the last order l2=[[7], 2, 3]
https://www.programiz.com/python-programming/methods/built-in/list
What will the code return?
<pre>
l1 = [1, 2, 3]
l2 = l1
l3 = l1.copy()
l4 = list(l1)
l1[0] = [7]
print(l1, l2, l3, l4)
</pre>

1. [7, 2, 3] [7, 2, 3] [1, 2, 3] [1, 2, 3]
2. [[7], 2, 3] [[7], 2, 3] [[7], 2, 3] [1, 2, 3]
3. [7, 2, 3] [7, 2, 3] [7, 2, 3] [1, 2, 3]
4. [[7], 2, 3] [[7], 2, 3] [1, 2, 3] [1, 2, 3] ***

Q49. 
hard
The function show is repeated 10 times printing 5432154321 until length-1 = -5
(--> list[-5]) which returns an IndexError: list index out of range
https://stackabuse.com/python-nested-functions/
What will the code return?
<pre>
def show(list, length):
    print(list[length-1], end='')
    show(list, length-1)

show([1,2,3,4,5],5)
</pre>

1. 54321
2. 4321
3. 5432154321
4. error ***

Q50. 
hard
The 1st,2nd,4th command change (dd[1] = 8 + dd[2]) 
or add to the dictionary (dd[10] =2), but the 3rd one
uses a wrong keyvalue (8), which is not part of dd
https://www.askpython.com/python/dictionary/how-to-update-a-python-dictionary
Which of the following commands will give an error?
<pre>
dd = {1:5, 2:10}
</pre>

1. 	dd[1] = 8 + dd[2]
2. 	dd[3] = 12
3.	dd[8] = dd[8] + 2 ***
4.  dd[10] =2

Q51. 
hard
The __str__  method prints itself a string, so instead of 
print(self.name+': '+self.city) you need return(self.name+': '+self.city)
https://www.educative.io/edpresso/what-is-the-str-method-in-python
What will the code return?
<pre>
class Student():
    def __init__(self,name,city):
        self.name = name
        self.city = city
    def __str__(self):
        print(self.name+': '+self.city)
s1 = Student('John','athens')
print(s1)
</pre>

1. 	TypeError: __str__ returned non-string ***
2. 	John,athens
3.	<__main__.Student object at 0x1023e6908
4.  John: athens

Q52. 
hard
the result is sqrt(13) - sqrt(13) = 0
https://www.geeksforgeeks.org/python-classes-and-objects/
What will the code return?
<pre>
class Point():
    def __init__(self,x,y):
        self.x = x
        self.y = y
    def distance(self, p):
        return (((self.x-p.x)**2 + (self.y - p.y)**2)**0.5)

p1 = Point(1,2)
p2 = Point(3,5)
print(p1.distance(p2) - p2.distance(p1))
</pre>

1. 	0.0 ***
2. 	sqrt(13)
3.	-1
4.  -1.0

Q53. 
hard
l is not a list comprehension, it is a generator,thus the result is a generator object
https://www.programiz.com/python-programming/generator
What will the code return?
<pre>
my_list = [1, 3, 6, 10]
l = (x**2 for x in my_list)
print(l)
</pre>

1. 	error
2. 	(1, 9, 36, 100)
3.	[1, 9, 36, 100]
4.  <generator object <genexpr> at 0x0110DC30> ***

Q54. 
hard
x appears 4 times
y appears 2 times
z appears 2 times
https://www.guru99.com/python-counter-collections-example.html
What will the code return?
<pre>
from collections import Counter
list1 = ['x','y','z','x','x','x','y', 'z']
print(Counter(list1))
</pre>

1. 	{'x': 4, 'y': 2, 'z': 2}
2. 	Counter({'x': 4, 'y': 2, 'z': 2}) ***
3.	8
4.  (x,4) (y,2) (x,2)

Q55. 
hard
the comprehension list is lst = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
due to the filter method the lst = [0, 4, 16, 36, 64]
and since [::2] means 'make a step by 2', lst = [0, 16, 64]
https://www.programiz.com/python-programming/methods/built-in/filter
What will the code return?
<pre>
def help(x):
    return x % 2 == 0

lst = [i**2 for i in range(10)] 
lst = filter(help, lst) 
print(list(lst)[::2]) 
</pre>

1. 	[0, 4, 16]
2. 	[0, 4, 16, 36, 64]
3.	[0, 16, 64] ***
4.  [0, 1, 4, 9, 16, 25, 36, 49]

Q56. 
hard
a == b returns true because of the method a.__eq__(b) 
but b is a returns false because a has a different memory address than b
https://www.geeksforgeeks.org/difference-between-__eq__-vs-is-vs-in-python/
What will the code return?
<pre>
class A():
    def __init__(self, x):
        self.x = x

    def __eq__(self, o):
        return self.x == o.x

a = A(2)
b = A(2.0)
print(a == b, b is a)
</pre>

1. 	True False ***
2. 	False True
3.	True True
4.  False False

Q57. 
hard
d refers to the the class A ,therefore 2 4 is printed
e refers to the class B which inherits all the methods from class A but overwrites the print method, so 5 4 is printed
g refers to the class C which inherits all the methods from class B, which inherits all the methods from class A, but since 
g.x = g.z --> g = C(7, 4, 3) and thus 4 7 is printed 
https://realpython.com/python-super/
What will the code return?
<pre>
class A:
    def __init__(self, x, y):
        self.x = x
        self.y = y
    def print(self):
        print(self.x, self.y,end=' ')

class B(A):
    def print(self):
        print(self.y, self.x,end=' ')

class C(B):
    def __init__(self, x, y, z):
        super().__init__(x, y)
        self.z = z

d = A(2, 4) 
e = B(4, 5) 
g = C(3, 4, 7)
g.x = g.z
d.print()
e.print()
g.print()
</pre>

1. 	2 4 4 5 3 4
2. 	2 4 5 4 4 7 ***
3.	2 4 5 4 7 3
4.  2 4 4 5 4 3

Q58. 
hard
Since the invoking method has been properly invoked, variable x from the 
main class has been properly inherited and it can also be accessed.
https://www.journaldev.com/18397/python-class-init
What will the code return?
<pre>
class Test:
    def __init__(self):
        self.x = 0
class Derived_Test(Test):
    def __init__(self):
        Test.__init__(self)
        self.y = 1
def main():
    b = Derived_Test()
    print(b.x,b.y)
main()
</pre>

1. 	Error because class B inherits A but variable x isn't inherited 
2. 	0 0
3.	0 1 ***
4.  Error, the syntax of the invoking method is wrong

Q59. 
hard
The program uses Chaining Decorators.
In simpler terms chaining decorators means decorating a function with multiple decorators.
https://www.geeksforgeeks.org/decorators-in-python/
https://www.youtube.com/watch?v=tfCz563ebsU
What will the code return?
<pre>
def decor1(func): 
    def inner(): 
        x = func() 
        return x * x 
    return inner 
  
def decor(func): 
    def inner(): 
        x = func() 
        return 2 * x 
    return inner 
  
@decor1
@decor
def num(): 
    return 10
print(num()) 
</pre>

1. 	200
2. 	400 ***
3.	10
4.  20 

Q60. 
hard
The lambda function:
-The ord() function returns an integer representing the Unicode character
-Then we increase the integer by 1 and then the chr() method returns a
character (a string) from this integer.For example, ord('a') = 97 and 
chr(ord('a') +1) = 'b'.As a result ,the lambda function returns the next 
character ( a-->b, b-->c, c-->d).

The map function:
-repeats the lambda function for each element of the list

*list:
-returns a list without the '[]' and the ','
https://www.journaldev.com/22767/python-ord-chr
https://realpython.com/python-map-function/
What will the code return?
<pre>
print(*list(map(lambda x: chr(ord(x) + 1), ["a", "b", "c"])))
</pre>

1. 	c b a
2. 	a b c d
3.	a b c
4.  b c d ***